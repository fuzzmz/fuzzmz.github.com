<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>QWERTY - fast keystrokes</title><link href="http://fuzz.me.uk/" rel="alternate"></link><link href="http://fuzz.me.uk/feeds/all-en.atom.xml" rel="self"></link><id>http://fuzz.me.uk/</id><updated>2012-11-20T00:00:00+02:00</updated><entry><title>Two-factor auth with Google Authenticator</title><link href="http://fuzz.me.uk/2012/11/20/tfa-google-auth/" rel="alternate"></link><updated>2012-11-20T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-11-20:2012/11/20/tfa-google-auth/</id><summary type="html">&lt;h2&gt;The reason&lt;/h2&gt;
&lt;p&gt;As you may remember I've went through &lt;a href="http://fuzz.me.uk/2012/01/19/locked-out/"&gt;a bit of an ordeal&lt;/a&gt; trying to secure my server by allowing users to log in only with certificates. This had the advantage of being more secure than a password but, as time went on, the big disadvantage of not being able to log in from PCs which lacked the certs.&lt;/p&gt;
&lt;p&gt;Moving forward (and doing a fresh install on the VPS, which I'll address in a future post) I've went back on my decision to only allow certificate based logins. The downside to this change is that I felt the the server was still exposed despite using a strong password.&lt;/p&gt;
&lt;p&gt;Fortunately Google offers a nice Authenticator application for smartphones as well as offering a &lt;a href="https://code.google.com/p/google-authenticator/"&gt;pluggable authentication module (PAM)&lt;/a&gt; which ties in with the Authenticator app for two-factor authentication on login. This means that besides knowing the username and password someone would need to have a time-based one-time password generated by the app in order to log in to the site.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Installing google-authenticator PAM&lt;/h2&gt;
&lt;p&gt;I'm running Debian so this guide applies to Debian and Debian-based distributions.&lt;/p&gt;
&lt;p&gt;First of all we're going to need to install the build-essential package which will allow us to actually install the software.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install build-essential&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After we've got them installed we're going to install some dependencies needed for the PAM module to work (libpam-dev) as well as to retrieve (git) and easily configure the software (libqrencode-dev).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install git libpam-dev libqrencode-dev libpam0g-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now let's go ahead and download the code:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://code.google.com/p/google-authenticator/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This grabs the files from Google's server and creates a local copy. After that's done navigate to the google-authenticator/libpam directory and run&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now that we've got everything installed it's time to actually set up the application. This is extremely easy, just run &lt;code&gt;google-authenticator&lt;/code&gt; which will generate a QR code (thanks to the libqrencode-dev package); scan this code in the Google Authenticator mobile app (or enter the information by hand) and head back to your PC to finish setting up the software by answering the questions it asks.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Setting up the OS to use Challenge Response Authentication&lt;/h2&gt;
&lt;p&gt;Once the previous step is done we need to let the OS know that is has to use the newly installed PAM module. To do this we need to edit the &lt;code&gt;/etc/pam.d/common-auth&lt;/code&gt; (by running &lt;code&gt;sudo vim /etc/pam.d/common-auth&lt;/code&gt; for example) and adding the following line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth    required                        pam_google_authenticator.so&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next up is the ssh_config file in order to allow SSH to send challenge requests:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vim /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find the line containing &lt;code&gt;ChallengeResponseAuthentication&lt;/code&gt; and set it to yes (also uncomment it if it's commented out) so that it looks like:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ChallengeResponseAuthentication yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now all there's left to do is restart the SSH server and to test the change:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;:::&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next time you'll log in you should be greeted with a message asking for a verification code after entering the username and password.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;ssh user@host
Password:
Verification code:
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Bonus points&lt;/h2&gt;
&lt;p&gt;One advantage to this is the fact that even if you log in using a certificate (which bypasses the two-factor authentication) you are still asked for a verification code when trying to elevate to root via sudo for example.&lt;/p&gt;</summary><category term="Debian"></category><category term="Google"></category><category term="security"></category><category term="TFA"></category><category term="T-FA"></category><category term="2FA"></category></entry><entry><title>Git revert to commit</title><link href="http://fuzz.me.uk/2012/11/19/git-revert-specific/" rel="alternate"></link><updated>2012-11-19T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-11-19:2012/11/19/git-revert-specific/</id><summary type="html">&lt;p&gt;Have you ever made a git commit only to figure out that it wasn't such a good idea? How about wanting to go back in your history and reverting to a specific commit? It's actually simple once you know how to do it:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; 56&lt;span class="n"&gt;e05fced&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;soft&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;&lt;span class="p"&gt;@{&lt;/span&gt;1&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Revert&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; 56&lt;span class="n"&gt;e05fced&lt;/span&gt;&amp;quot;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just replace 56e05fced with the commit code you want to revert to.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first line resets the index to a former commit (56e05fced in this case).&lt;/li&gt;
&lt;li&gt;The second line moves the pointer back to the previous head.&lt;/li&gt;
&lt;li&gt;Third line is self explanatory (commits the changes with a message).&lt;/li&gt;
&lt;li&gt;Last tine updates the working copy to reflect the new commit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then all you have to do is push the changes with a &lt;code&gt;git push origin master&lt;/code&gt; or whatever your branch may be.&lt;/p&gt;</summary><category term="git"></category><category term="revert"></category><category term="undo"></category></entry><entry><title>Quick command prompt to path</title><link href="http://fuzz.me.uk/2012/09/08/quickcmd/" rel="alternate"></link><updated>2012-09-08T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-09-08:2012/09/08/quickcmd/</id><summary type="html">&lt;p&gt;If you're working a lot with the command prompt and Windows Explorer you find yourself either having to copy/paste a lot of paths into cmd.exe or just wasting time writing them by hand. Windows 8 addresses that with a (more visible) open command prompt here button, but the functionality already exists in Windows 7 and maybe even earlier.&lt;/p&gt;
&lt;p&gt;The first way in achieving that is &lt;strong&gt;shift+right clicking&lt;/strong&gt; on a folder and clicking on the option "Open command window here".&lt;/p&gt;
&lt;p&gt;&lt;img alt="shift-right-click" src="/images/cmd_click.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;The second way is something that's even more hidden. Say for example you have a long path such as&lt;/p&gt;
&lt;p&gt;&lt;img alt="long_path" src="/images/long_path.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;All you'd have to do is edit it and type cmd at the beginning of the string followed by a space to separate the command from the path, then hit Enter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="cmd_in_long_path" src="/images/cmd_path.png" /&gt;&lt;/p&gt;
&lt;p&gt;And voil√†!&lt;/p&gt;
&lt;p&gt;&lt;img alt="cmd_to_long_path" src="/images/cmd_to_path.PNG" /&gt;&lt;/p&gt;</summary><category term="Windows"></category><category term="cmd"></category><category term="tips"></category></entry><entry><title>Let there be Prometheus</title><link href="http://fuzz.me.uk/2012/06/13/prometheus/" rel="alternate"></link><updated>2012-06-13T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-06-13:2012/06/13/prometheus/</id><summary type="html">&lt;p&gt;I thought the movie was good, great even if you haven't watched any of the trailers. Michael Fassbender played a perfect evil android, from the stiff posture to the robotic reactions to things around him. I wasn't exactly sold on Noomi's character but she did a great job with it anyway. I don't normally like Charlize but she did pretty damn good, too. For a while, I was curious if she was a droid, too.&lt;/p&gt;
&lt;p&gt;The movie provided some possible answers to other questions. One that we now know for certain is that the company knew exactly what was going on on LV-426 once the language in the SOS was deciphered. Second, we know that the Engineer who died on that ship made a mistake, but was clearly headed for some system where they intended to deploy the aliens (while AVP has provided some great comics and novels, I find this a more interesting premise than a yautja male initiation rite). Third, the aliens were definitely biological weapons as opposed to a naturally evolved species.&lt;/p&gt;
&lt;p&gt;After that, the movie lets you make up your mind on a few things. Captain Janek notes that the Engineers are smart enough to build their biological weapons someplace other than their backyard. They are also smart enough to give their creations a map to the bio depots instead of their homeworld - would you want your creations showing up at your doorstep with who knows what microbes and military weapons? Now, Shaw is leaving the depot to go back to their homeworld. Flying a ship that's likely loaded down with biological weapons. There might be a very good reason that the Engineers don't have any future involvement with humankind.&lt;/p&gt;
&lt;p&gt;Another thing is that Janek notes this planet is a "lab". Earth is another "lab". Shaw isn't going to get the answer she wants when she heads back to their homeworld, assuming she gets an answer at all. She's probably going to hear that humanity didn't fuck up, they were just another petri dish and they were going to see what happens when two dishes combine. That answers the biggest question: Why? Because they could. Just like us, their descendents.&lt;/p&gt;
&lt;p&gt;The only real question I have that I couldn't intuit an answer for is what happened in the opening scene. It almost looks like that Engineer was exiled, or left behind, and decided to commit suicide. Not sure why that would be worth the scene, though, so I think there's another reason it was there.&lt;/p&gt;</summary><category term="Prometheus"></category><category term="movies"></category></entry><entry><title>Enhanc... erm, extract!</title><link href="http://fuzz.me.uk/2012/06/08/extract-archive-recursively/" rel="alternate"></link><updated>2012-06-08T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-06-08:2012/06/08/extract-archive-recursively/</id><summary type="html">&lt;p&gt;We've all been there, haven't we? We just downloaded the latest seaso... erm, Linux distro and it came with lots of folders which in turn contain lots of archives, one folder per episode. One way to do things is to just extract each episode... erm, distro, by hand, watch it, move to the next and so on.&lt;/p&gt;
&lt;p&gt;Another way would be to write a Windows batch script to make &lt;a href="www.7-zip.org/"&gt;7-zip&lt;/a&gt; go through all the archives and extract their contents, which means you run it once and end up with all the files out.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="n"&gt;/D&lt;/span&gt; &lt;span class="n"&gt;/r&lt;/span&gt; &lt;span class="nv"&gt;%%F&lt;/span&gt; in (&lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;) &lt;span class="k"&gt;DO&lt;/span&gt; (
    pushd &lt;span class="nv"&gt;%CD%&lt;/span&gt;
    &lt;span class="k"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;%%F&lt;/span&gt;
        &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="nv"&gt;%%X&lt;/span&gt; in (*.rar *.zip) &lt;span class="k"&gt;DO&lt;/span&gt; (
            &lt;span class="s2"&gt;&amp;quot;C:\Program Files\7-zip\7z.exe&amp;quot;&lt;/span&gt; x &lt;span class="nv"&gt;%%X&lt;/span&gt;
        )
    popd
)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that if you're running a 64bit OS but don't have the 64bit version of 7-zip installed you need to change "C:\Program Files\7-zip\7z.exe" x %%X into "C:\Program Files (x86)\7-zip\7z.exe" x %%X&lt;/p&gt;
&lt;p&gt;Launch the bat, and all rar's/zips will be extracted into the folder they are contained in.&lt;/p&gt;
&lt;p&gt;Now let's be helpful and dissect the script, shall we?&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="n"&gt;/D&lt;/span&gt; &lt;span class="n"&gt;/r&lt;/span&gt; &lt;span class="nv"&gt;%%F&lt;/span&gt; in (&lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;) &lt;span class="k"&gt;DO&lt;/span&gt; (
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a simple for loop to go through all folders in the current directory, and put the path into a variable %%F.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;pushd &lt;span class="nv"&gt;%CD%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Put the current directory into memory.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;%%F&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Set the folder from variable %%F as the current directory.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="nv"&gt;%%X&lt;/span&gt; in (*.rar *.zip) &lt;span class="k"&gt;DO&lt;/span&gt; (
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For all the archives (rar and zip) in the current folder, do:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s2"&gt;&amp;quot;C:\Program Files\7-zip\7z.exe&amp;quot;&lt;/span&gt; x &lt;span class="nv"&gt;%%X&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run 7-zip on the files with the extract parameter (basically call the command line version of 7-zip telling it to extract the current archive)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;popd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Return to the previous directory stored in memory.&lt;/p&gt;
&lt;p&gt;That's it! Pretty simple and efficient, isn't it?&lt;/p&gt;</summary><category term="7-zip"></category><category term="recursive"></category><category term="archives"></category><category term="bat"></category></entry><entry><title>Quick &amp; dirty with the Last.fm beta</title><link href="http://fuzz.me.uk/2012/05/13/last-fm-scrobbler-beta/" rel="alternate"></link><updated>2012-05-13T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-05-13:2012/05/13/last-fm-scrobbler-beta/</id><summary type="html">&lt;p&gt;&lt;img style="float:left; padding-right:10px" src="/images/lastfm.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;Last.fm released a &lt;a href="http://www.last.fm/group/Audioscrobbler+Beta"&gt;beta version&lt;/a&gt; of their audioscrobbler, the software that sits on your PC and lets you stream their radio as well as sends the plays to their web interface.&lt;/p&gt;
&lt;p&gt;Now, I'm a pretty big user of the old client, mostly because I disliked listening to the radio in my browser as that tends to not stay always open, while the music is everpresent, so I was pretty excited to find out about the new version. I didn't have any problems with the old software, and the only gripe with it is that it didn't notify you of the name of the track if the window was minimized.&lt;/p&gt;
&lt;p&gt;With this in mind, I'm really happy with how the new scrobbler looks; it most certainly is based on &lt;a href="https://github.com/twitter/twui"&gt;twui&lt;/a&gt;, the UI framework designed by Twitter and used in their Mac client (also used by the GitHub Mac application) and shares the look and feel with them. The interface is really responsive, though there are still some issues like not being able to click on the icons to mute or maximize the audio level, as well as the keyboard shortcuts being displayed using the Mac notation in the settings, but hey, it's a beta! Another omission is the lack of jumplists on Windows 7, but that's not really important as it usually stays minimized to tray; speaking of which, it would be nice if they'll include global shorts for playback, as the ones available only work while the app is in focus.&lt;/p&gt;
&lt;p&gt;Oh, and did I tell you that it also brings the notifications I was craving for? :D Yes, no more having to open the client in order to see what track just started playing.&lt;/p&gt;
&lt;p&gt;Stability seems to be great during my testing with no crash whatsoever, though resource consumption is higher compared to the previous client (around 40MB versus 12); fortunately that seems to be constant with no spikes or memory leaks which means that it can very well stay open 24/7.&lt;/p&gt;
&lt;hr /&gt;
&lt;p align="center"&gt;&lt;iframe width="480" height="360" src="http://www.youtube-nocookie.com/embed/jclAWeuPUjk?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</summary><category term="Last.fm"></category><category term="audioscrobbler"></category><category term="beta"></category></entry><entry><title>My Linux on the Desktop</title><link href="http://fuzz.me.uk/2012/05/07/my-linux-on-desktop/" rel="alternate"></link><updated>2012-05-07T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-05-07:2012/05/07/my-linux-on-desktop/</id><summary type="html">&lt;p&gt;As some of you know I'm a big Microsoft fanboy as 90% of what I do is based around MS tech (be it C#, .NET, SQL Server and so on); with this in mind I always find myself amused by the eternal "next year will be the year of Linux on PC", which is now accentuated by the lukewarm feelings parts of the internet has over Windows 8.&lt;/p&gt;
&lt;p&gt;The problem with Linux on the Desktop is that it doesn't bring anything to the table that can't be achieved in an easier/cleaner fashion using another OS, be it Windows or Mac OS X if you're a Unix fan.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Now imagine the following Linux install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xen Hypervisor (GPL2)&lt;/li&gt;
&lt;li&gt;Mint as the main OS&lt;/li&gt;
&lt;li&gt;Point updates are downloaded without interruption of the "default" main OS; when the user clicks on "Upgrade now" the boot process just points to a different image on the disk. If something doesn't work, the user can just use a previous version that did work.&lt;/li&gt;
&lt;li&gt;A new package manager&lt;/li&gt;
&lt;li&gt;The user directory is "protected" by Next3 (or Next4), so that if the "Upgrade now" process creates an incompatible data set, the "Rollback" feature can automatically move back to the correct version of the data.&lt;/li&gt;
&lt;li&gt;All of the above happens without any user visibility other than "Upgrade" and "Rollback"; if architected properly the Rollback can be on a per app basis such that different versions of the OS are loaded simultaneously!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course this feature isn't going to be consumer desired, but it does fix a problem consumers have; systems getting out of date and compatibility when systems do get updated. When coupled with Next3 you can also implement a safety net for data backup, for example, that file versioning can be used to implement a "backup vault" to protect the user from accidental deletes and changes.&lt;/p&gt;
&lt;p&gt;Even better if you've already got the setup for Xen+Multiple OSes, you can bake in "read only" features to improve the security of the system. If something appears to "compromise" one of the guest OSes, it can be re-initialized and the user warned of which site/activity/program caused the problem.&lt;/p&gt;
&lt;p&gt;So that immediately gives Linux the possibility of an OS advantage if an OEM were to take advantage of these features. Continuous update, continuous compatibility, and continuous backup/restore are all features currently lacking from "mainstream" Linux today that are actually rather valuable. It's also worth noting that OS X and Windows already offer something like "Continuous update", but don't truly promise "continuous compatibility".&lt;/p&gt;
&lt;p&gt;The sandboxing is also a good feature even if it isn't in of itself a strong selling point.&lt;/p&gt;
&lt;p&gt;To further mix it up the App Store model can be implemented ala the stable/unstable channel, adding another dimension of trusted/untrusted, where untrusted code/apps are "uncurated" and trusted code is "curated". Users can have the advantages of iOS as well as the flexibility of OSS and "open" app stores. With the sandbox and hypervisor the threat of untrusted code is also diminished if untrusted apps are launched into special guest OSes.&lt;/p&gt;</summary><category term="linux"></category><category term="PC"></category><category term="desktop"></category><category term="virtualization"></category></entry><entry><title>Google Drive - Not Ready for Primetime</title><link href="http://fuzz.me.uk/2012/05/04/google-drive-thoughts/" rel="alternate"></link><updated>2012-05-04T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-05-04:2012/05/04/google-drive-thoughts/</id><summary type="html">&lt;p&gt;&lt;img style="float:left; padding-right:10px" src="/images/google-drive.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://drive.google.com"&gt;Google Drive&lt;/a&gt; has been available for some time now and I've been playing with it for a bit. I just want to mention right now that I'm a big Dropbox fan and also a user of Microsoft's SkyDrive.&lt;/p&gt;
&lt;p&gt;Going back to Google Drive, there's no burying the lead, it sucks. I've been testing the desktop app for automatically syncing files and there are some fatal flaws that makes it unreliable and unusable.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;First, it doesn't work. I was able to get the program to error out, just like &lt;a href="http://productforums.google.com/forum/#!topic/drive/8DNEH3U6vbE"&gt;seemingly everyone else&lt;/a&gt;. Since the error can occur during the initializing phase of the program as well as afterwards, it stops functioning and sometimes cannot be started again without always erroring out. The only fix is to 'disconnect' the drive which is one of the biggest mistakes of all.&lt;/p&gt;
&lt;p&gt;Why is that the biggest mistake of all? Because you can only 'reconnect' the drive to an empty folder. If the program gets in an infinite error loop, the only fix is to 'disconnect' the GDrive. When doing so, you are presented with an ominous message that seems like it will delete everything in the GDrive folder, and this isn't too far from the truth. You cannot re-enable the program without pointing it to an empty folder. If you think you're clever, you'd just try to sneak the files back into the folder to work around this strange requirement. This is what I tried and it failed miserably. The program would silently download the files anyway and save one version with a number in the filename.&lt;/p&gt;
&lt;p&gt;Now, since the program errors out and requires a re-download of everything, I have to download 90,000 files again. I gave up on this process after 3 days, because I just knew it was going to finish and then decided to error out again.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Second, it's slow. No, I'm not talking about upload bandwidth and a currently overloaded service. I mean the method it uses to scan the files and sync them to the cloud version is clumsily done. The overhead for this process is insanely high: there is no way to check for blocks of files, so it must check each file individually. I had only 3 megs worth of files and 2000 updates took a very, very long time. I included some more folders that used many small files (around 90,000 files) and it took days to synchronize.&lt;/p&gt;
&lt;p&gt;Also, while copying the files to the folder, the file copy process slowed to a crawl -- a 1 minute process was going to take an hour to finish. I was able to close the program to complete the copy in a normal amount of time. So, file operations are much, much slower when working in this folder and this ties into the third issue below.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Third, it only supports a single folder location. This means you'd have to use a link (junction/hardlink,symlink) to other folders outside the 'drive' folder. Because the program only monitors the single folder, any changes to the linked folders will not register and may only be seen and updated during the initial scan at startup. To counter this, folders must be moved to this location and then links placed in the original position. It's just as easy to do as otherwise, but it's extremely counter intuitive and takes a while to figure out through trial and error.&lt;/p&gt;
&lt;p&gt;Now, you may say that Dropbox and SkyDrive also support only a single folder location, but at least they know how to parse and use links so that if something in a linked folder changes it gets uploaded then instead of at startup.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;To sum it up: It's broken, slow enough to make it impractical, 'works' only on a single folder, and the files on your computer are a treated as a 'second class citizen'.&lt;/p&gt;</summary><category term="Google"></category><category term="Google Drive"></category><category term="sync"></category></entry><entry><title>Meum Perlum equum</title><link href="http://fuzz.me.uk/2012/05/02/perl_in_latin/" rel="alternate"></link><updated>2012-05-02T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-05-02:2012/05/02/perl_in_latin/</id><summary type="html">&lt;p&gt;I'm not one of the fans of Perl and would chose Python over it every day of the week, but I still have to admit that it has some really fun things built around it.&lt;/p&gt;
&lt;p&gt;So, you know how, in order to have a good programming language, you need to have a good lexical structure. Most programming languages are based on English, which, let's be honest here, isn't the most consistent language out there when it comes to grammar and structure. This would also mean that programming languages based on English could be improved if they were based on some other language, right?&lt;/p&gt;
&lt;p&gt;Well, someone though about that and decided to write a module that makes it possible to write Perl programs in Latin. You can find the module and the reasoning behind it &lt;a href="http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Just for fun, here's the code for the &lt;a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"&gt;sieve of Eratosthenes&lt;/a&gt; (sic, it's a Greek mathematical algorithm for finding all the prime numbers up to a given limit.)&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;Lingua::Romana::&lt;/span&gt;&lt;span class="n"&gt;Perligata&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;inquementum&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;biguttam&lt;/span&gt; &lt;span class="n"&gt;egresso&lt;/span&gt; &lt;span class="n"&gt;scribe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;meo&lt;/span&gt; &lt;span class="n"&gt;maximo&lt;/span&gt; &lt;span class="n"&gt;vestibulo&lt;/span&gt; &lt;span class="n"&gt;perlegamentum&lt;/span&gt; &lt;span class="n"&gt;da&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;da&lt;/span&gt; &lt;span class="n"&gt;duo&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;conscribementa&lt;/span&gt; &lt;span class="n"&gt;meis&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;dum&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt; &lt;span class="n"&gt;decapitamentum&lt;/span&gt; &lt;span class="n"&gt;damentum&lt;/span&gt; &lt;span class="n"&gt;nexto&lt;/span&gt;
    &lt;span class="n"&gt;fac&lt;/span&gt; &lt;span class="n"&gt;sic&lt;/span&gt;
        &lt;span class="n"&gt;nextum&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;novumversum&lt;/span&gt; &lt;span class="n"&gt;scribe&lt;/span&gt; &lt;span class="n"&gt;egresso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
        &lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="n"&gt;sic&lt;/span&gt; &lt;span class="n"&gt;hoc&lt;/span&gt; &lt;span class="n"&gt;recidementum&lt;/span&gt; &lt;span class="n"&gt;nextum&lt;/span&gt; &lt;span class="n"&gt;cis&lt;/span&gt; &lt;span class="n"&gt;vannementa&lt;/span&gt; &lt;span class="n"&gt;da&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;cis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Believe it or not that is absolutely grammatically correct Latin.&lt;/p&gt;</summary><category term="perl"></category><category term="latin"></category><category term="geek"></category></entry><entry><title>SQL vs insert_language_here</title><link href="http://fuzz.me.uk/2012/04/27/sql_vs_other_lang/" rel="alternate"></link><updated>2012-04-27T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-04-27:2012/04/27/sql_vs_other_lang/</id><summary type="html">&lt;p&gt;I was chatting online a few days ago about why people use SQL instead of writing regular code in whatever language you use to do data storage, querying and manipulation. It was a fun and long conversation stemming from the fact that the one who started it knew next to nothing about SQL as a language nor did he want to learn.&lt;/p&gt;
&lt;p&gt;But this made me think about a good example to show why one would chose SQL instead of reinventing the wheel, and, because I was hungry as hell at that point, this is what I came up with.&lt;/p&gt;
&lt;p&gt;Think of it like this. Say I want a pizza, and I have to tell a computer how to make it.&lt;/p&gt;
&lt;p&gt;In C#, it would be:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Flour&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Flour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FlourType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wheat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Water&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Water&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WaterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Filtered&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Yeast&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Yeast&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;TomatoSauce&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TomatoSauce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Ragu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Sausage&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Sausage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pork&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Spiciness&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Medium&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Pepperoni&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Pepperoni&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;CheeseMix&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;CheeseMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mozzarella&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cheddar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;parmesan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="n"&gt;Mixer&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mixer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;Dough&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Knead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Oven&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Oven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Degrees&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In SQL the same thing would be described as:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;select&lt;/span&gt;
    &lt;span class="n"&gt;pizza&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topping&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;
    &lt;span class="n"&gt;Pizzas&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
    &lt;span class="k"&gt;cross&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;Toppings&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="k"&gt;where&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topping&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tomato sauce&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sausage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pepperoni&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, what would you chose? And do you have any other good examples?&lt;/p&gt;</summary><category term="SQL"></category><category term="geek"></category></entry><entry><title>xkcd April Fools gag</title><link href="http://fuzz.me.uk/2012/04/01/xkcd-april-fools-2012/" rel="alternate"></link><updated>2012-04-01T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-04-01:2012/04/01/xkcd-april-fools-2012/</id><summary type="html">&lt;p&gt;A nice and geeky xkcd strip for this year's April Fools day talking about perception bias in the form of umwelt.&lt;/p&gt;
&lt;p&gt;The alt text reads:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Umwelt is the idea that because their senses pick up on different things, different animals in the same ecosystem actually live in very different worlds. Everything about you shapes the world you inhabit--from your ideology to your glasses prescription to your browser window size.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The strips seem to be generated based on what browser the user is using, as well as the size of the window and the IP address.&lt;/p&gt;
&lt;p&gt;&lt;iframe class="imgur-album" width="100%" height="550" frameborder="0" src="http://imgur.com/a/C4j2F/embed"&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;As usual, Randall Munroe proves to be awesome.&lt;/p&gt;</summary><category term="xkcd"></category><category term="april fools"></category><category term="comic"></category></entry><entry><title>Bip to Energymech IRC log converter</title><link href="http://fuzz.me.uk/2012/03/27/bip-to-energymech/" rel="alternate"></link><updated>2012-03-27T00:00:00+03:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-03-27:2012/03/27/bip-to-energymech/</id><summary type="html">&lt;p&gt;The great thing about knowing how to code is being able to build things that help you out.&lt;/p&gt;
&lt;p&gt;I've recently had to convert some IRC logs from the &lt;a href="http://bip.milkypond.org/"&gt;Bip&lt;/a&gt; format to the Energymech format used by &lt;a href="http://wiki.znc.in/"&gt;ZNC&lt;/a&gt; in order to be able to then generate some statistics from them using &lt;a href="http://pisg.sourceforge.net/"&gt;pisg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My first approach was to hack together some macros and just plow through the logs (fortunately there weren't that many), but this had several downsides:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;by using macros I had to take out certain data which could be used to generate statistics&lt;/li&gt;
&lt;li&gt;it's a manual job and doesn't scale well time-wise, despite being able to automate it to some extent&lt;/li&gt;
&lt;li&gt;can't be easily shared with others&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After finishing parsing the logs I decided that it's best to make a learning experience out of it and code a Python script that goes through all the logs and generates the correct output; I knew it wasn't a difficult task (heck, I've thrown it together in around 3 hours of coding and debugging overall) so all I had to do was get cracking.&lt;/p&gt;
&lt;p&gt;The largest issue I had with it was regarding the way Python handles regex substitution.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p&gt;Whoever makes me understand why this Python regex substitution doesn't work gets a cookie and my eternal gratitude. &lt;a href="http://t.co/fj8Nn6i4" title="http://bit.ly/GP8lM3"&gt;bit.ly/GP8lM3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a href="https://twitter.com/fuzzmz/status/184431795746516992" data-datetime="2012-03-27T00:09:01+00:00"&gt;March 27, 2012&lt;/a&gt;&lt;/blockquote&gt;

&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Thanks to the great wonder that is the Internet I could get an answer to my question in a couple of hours and continue on my marry way.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p&gt;D'oh, strings in Python are immutable so my re.sub doesn't modify the string in place which means I need to, you know, save the result!&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a href="https://twitter.com/fuzzmz/status/184479937229627392" data-datetime="2012-03-27T03:20:19+00:00"&gt;March 27, 2012&lt;/a&gt;&lt;/blockquote&gt;

&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Another nice tip I got was to pre-compile the regex before going through the loop which speeds up things considerably when dealing with lots of text. It was as simple as a:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="n"&gt;talk_mask&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\!.*?\:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;connect_mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\!.*?\has&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;quit_info&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\quit.*?\]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;find_nick&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\&amp;lt;* .*?\!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time_mask&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;([0-1]\d|2[0-3]):([0-5]\d):([0-5]\d)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;&lt;a href="https://github.com/fuzzmz/bip-to-energymech"&gt;Download&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I've of course made the code public. It can be found and downloaded from &lt;a href="https://github.com/fuzzmz/bip-to-energymech"&gt;GitHub&lt;/a&gt; which is also the place to report bugs or make suggestions.&lt;/p&gt;</summary><category term="irc"></category><category term="python"></category><category term="bip"></category><category term="energymech"></category><category term="log"></category><category term="log converter"></category></entry><entry><title>Short thoughts on Windows 8 &amp; Metro</title><link href="http://fuzz.me.uk/2012/03/07/thoughts-on-metro/" rel="alternate"></link><updated>2012-03-07T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-03-07:2012/03/07/thoughts-on-metro/</id><summary type="html">&lt;p&gt;There's been a lot of talk about the recent release of the Windows 8 Consumer Preview and of the new Start Screen and Metro interface. I've been running it for some time now and will post a full article containing my impressions sometime next week, but until then I wanted to talk a bit about the most polarizing aspect of the new OS: the new start screen and the Metro design language.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="Windows 8 Beta fish" src="/images/win8_header.png" /&gt;&lt;/p&gt;
&lt;p&gt;A lot of people say that the new design is for kids, it's "Fisher Price" (going back to the same term used when Windows XP first launched), it isn't serious enough and looks like crap.&lt;/p&gt;
&lt;p&gt;It's not 'twee' to me. It's not Fisher Price. It's akihabara and Vegas. It's bold, brash, American, neon, digital, masculine. It's true that they didn't go skeumorphic. There is no car interior that looks this digital. There are very few home interiors that look like this. It's about media, very tech magazine-ish. And the colors don't match.&lt;/p&gt;
&lt;p&gt;Now, before I continue, let me say I'm among the few that like Metro as a desktop improvement. Finally they fixed notifications, widgets and online integration. Perhaps in time my need for chrome will fade away, who knows? Certainly it's easier to recommend to family members.&lt;/p&gt;
&lt;p&gt;But talking purely aesthetically, there's a proportion of the non-techy world that is female and I'm guessing won't like this. It's like Media Center, which was also savagely off-putting. &lt;/p&gt;
&lt;p&gt;Just look at it for a second. What does it remind you of? Bricks. Legos. Banner ads. A crazy quilt, perhaps. Anecdotally, by the way, Lego has had to re-design, re-brand and re-package LEGOs to appeal to girls. So I think there might be a gender disconnect here.&lt;/p&gt;
&lt;p&gt;It's functionally better, but I think that aesthetics will influence sales. Particularly business sales. And it's so subjective, while it might matter, I'm not predicting rejection or revulsion or anything specific. But I think MS, like certain car makers, skews masculine at times and I think Metro shows this more than the traditional desktop that was less in your face and less geometric, where you'd see a wallpaper of a green field (and yes I know the desktop is still there). Not that necessarily women have any problem with LEGOs or geometry or bricks, but statistically they seems to find those less appealing, again, afaict, imo and ymmv and all that, not meaning to caricature the female gender or paint with broad strokes, we're all different after all.&lt;/p&gt;
&lt;p&gt;Also, we can take a peek at Android to see how "male design" has influenced sales: it also skews masculine due to Verizon's Droid ads and Google culture, but seems to be doing pretty well for himself, especially considering the ICS redesign which, as Metro, gets rid of most skeumorphism in favour of lines and strong colours and typography.&lt;/p&gt;
&lt;p&gt;Back to Metro, perhaps they need a live tile with, "Don't Panic," written in large friendly letters. But the truth is that nothing stops you from having a start screen that is visually made up mostly of pictures of your friends &amp;amp; family which shows their latest messages &amp;amp; updates.&lt;/p&gt;</summary><category term="Windows"></category><category term="Metro"></category><category term="Windows 8"></category><category term="Microsoft"></category><category term="design"></category><category term="UX"></category><category term="UI"></category><category term="skeumorphic"></category></entry><entry><title>A look at FTPbox</title><link href="http://fuzz.me.uk/2012/02/22/ftpbox-review/" rel="alternate"></link><updated>2012-02-22T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-02-22:2012/02/22/ftpbox-review/</id><summary type="html">&lt;p&gt;&lt;img style="float:left; padding-right:10px" src="/images/ftpbox.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt; is one of the most well known syncing services, and deservedly so, but one downside is that you have to use their servers for storing data, and with that, the account space limits they have in place. But what if you could use your own server to act as a repository for your synced files?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ftpbox.org/"&gt;FTPbox&lt;/a&gt; comes to solve just that problem, or at least tries, by offering a way to synchronize your files to your own host, via FTP. The reason I say tries is that FTPbox is still in beta and has a few problems, some caused by the software itself, others caused by the fact that you're limited by what your hosting provider is offering you (in terms of FTP availability and options).&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The software&lt;/h2&gt;
&lt;p&gt;I'd first like to address the problems that are strictly tied to the application. First of all, the version I tested (beta 1.8) wanted to write and read its settings file in the \Program Files\FTPbox directory, which always caused an error and eventually crashed on Windows 7 (and it should act the same on Vista) unless it was being run as administrator, which granted read/write privileges for the Program Files folder. Fortunately, because the application is open-source, I've submitted a patch which fixes this problem by saving the settings file under %AppData%, where it should belong.&lt;/p&gt;
&lt;p&gt;You also need to use the same location for the sync folder on all computers; if you don't the application will create multiple folders corresponding to the location of the sync folder on the remote computer (see video for more clear example).&lt;/p&gt;
&lt;p&gt;Secondly, it feels sluggish and tends to eat up a lot of resources, which makes me think that the application isn't properly threaded (and the code confirms that to some extent); at first I thought that my .Net Framework 4 install got hosed somehow, but after throwing it in a VM the problem persisted.&lt;/p&gt;
&lt;p&gt;Another small inconvenience, at least compared to Dropbox, is the fact that it can only watch a single folder, so all the data you want synced must reside in that folder. Add to that the lack of icon overlays to give you visual feedback on the state of the files and folders (syncing, synced, etc.), no indication of the speed of the synchronization process (or a percentage for the current sync) and no shell integration except the tray icon.&lt;/p&gt;
&lt;p&gt;What it does offer though is a web interface to manage your files remotely, which currently consists only of uploading files, deleting them or sharing them with other people. So in short, it's pretty basic at this point in time. I need to stress though that this is still a beta, so a work in progress, and a lot of the things I mentioned above can, and hopefully will get fixed.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The Service&lt;/h2&gt;
&lt;p&gt;Now, the application is only one part of what FTPbox is trying to be, and that is a a synchronizing service. The main problem is that the most important aspects of the service are dependent on your hosting provider.&lt;/p&gt;
&lt;p&gt;The first thing that comes to mind is the available space, which tends not to be that large of a problem, with most hosting services offering hundreds of gigabytes of space. What might become a problem though is the maximum bandwidth allowed: if you're trying to sync really large files on multiple computers you can exhaust your available bandwidth relatively easy, especially if you also want to share those files with other people.&lt;/p&gt;
&lt;p&gt;The second thing is upload speed, which can vary greatly depending on how close you are to the server; if large services tend to use multiple servers scattered throughout the world which get you good speeds, you're stuck with what you have. And even if the speed might be great for you, it might be extremely slow for your friend in the US with whom you're sharing your files with.&lt;/p&gt;
&lt;p&gt;Another aspect to consider is that other services usually backup their data, which means that if anything goes wrong they still have copies. This isn't that large of an issue though considering that you're syncing the files, so they should exist on at least a computer, which in turn will get synced to the cloud - well, to your server.&lt;/p&gt;
&lt;p&gt;But the most important part is security. Despite being advertised as secure, it's up to your hosting provider to offer SFTP access for transfer through SSH, or FTPS for TLS/SSL encryption; in case your hosting provider doesn't offer them it means that your data is sent in the clear and anyone listening it can have access to it. You also need to take into account that the files aren't encrypted on the server, which means that there's the possibility that your server admin can view it.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The video&lt;/h2&gt;
&lt;p&gt;Unfortunately, because the application is currently in beta, there were some problems during the recording of the video. I chose to keep everything as is to show the problems a user might face while using it.&lt;/p&gt;
&lt;p&gt;Please remember though that FTPbox is a work in progress and this not represent the final version of the software.&lt;/p&gt;
&lt;p&gt;Also, sorry for the lack of the mouse cursor, just now noticed that it's missing.&lt;/p&gt;
&lt;iframe width="640" height="360" src="http://www.youtube-nocookie.com/embed/tEzhMorMohU?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="FTPbox"></category><category term="Dropbox"></category><category term="syncing"></category></entry><entry><title>GitHub Pages - free website hosting</title><link href="http://fuzz.me.uk/2012/02/21/github-hosting/" rel="alternate"></link><updated>2012-02-21T01:37:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-02-21:2012/02/21/github-hosting/</id><summary type="html">&lt;p&gt;From time to time I run into people who want to host a simple (or not so simple, as we'll show later on in this post) website online but don't want to spend money on hosting or even a domain name.&lt;/p&gt;
&lt;p&gt;I know there are a lot of alternatives out there for just such a thing, but now I'll talk about one which has the promise of keeping your files online without trying at the same time to fill your pages with ads, referral links or spam the living hell out of you.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="GitHub + html = love" src="/images/github_pages_hosting.png" /&gt;&lt;/p&gt;
&lt;p&gt;Many regular internet users don't know about GitHub, and it's something I find normal. GitHub is a place to share code, and a lot of open source projects have their home there for users to view and contribute to them.&lt;/p&gt;
&lt;p&gt;One nice feature that GitHub offers though is something called &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, which is a feature that allows users to publish content to the web by pushing the files to a GitHub repository. An easier way to put things is that they are hosting your website for you, free of charge.&lt;/p&gt;
&lt;p&gt;Now, one of the downsides is the fact that they don't offer advanced functions, such as a database, so popular blogging systems such as Wordpress can't be hosted on GitHub Pages, which only serves .html pages. On the other hand, the majority of users don't really need the full functionality Wordpress offers for example, and could very well use a static blog generator (a system which simply builds .html pages with your content) such as &lt;a href="http://readthedocs.org/docs/pelican/en/2.7.2/"&gt;Pelican&lt;/a&gt; - which allows you to write your posts in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; or &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; and then generates the html files, even allowing comments by using &lt;a href="http://disqus.com"&gt;Disqus&lt;/a&gt; - or host an image gallery, a personal portfolio, or anything which can be built with HTML+CSS+JS.&lt;/p&gt;
&lt;p&gt;All it takes is to &lt;a href="http://help.github.com/win-set-up-git/"&gt;set up Git&lt;/a&gt;, optionally install a GUI interface such as &lt;a href="http://code.google.com/p/tortoisegit/"&gt;TortoiseGit&lt;/a&gt;,  &lt;a href="https://github.com/signup/free"&gt;create an account&lt;/a&gt; on GitHub and then follow the simple instructions on &lt;a href="http://pages.github.com/"&gt;Introduction to Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I know this sounds complicated and might put off people, but trust me, it's a fast setup, taking only around 10 minutes to get everything up and running; and once that is done you've got yourself a really safe place to host your website for free, which can withstand a huge influx of visitors (if one of your articles becomes really popular really fast), and without any risks to your data or online identity.&lt;/p&gt;
&lt;p&gt;Oh, and they also allow you to use your own domain name for free if you have one available.&lt;/p&gt;</summary><category term="hosting"></category><category term="github"></category><category term="github pages"></category><category term="free"></category></entry><entry><title>ArsTechnica February SC2 Tournament</title><link href="http://fuzz.me.uk/2012/02/18/ars-feb-sc2-tourn/" rel="alternate"></link><updated>2012-02-18T21:50:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-02-18:2012/02/18/ars-feb-sc2-tourn/</id><summary type="html">&lt;p&gt;Well, it's time for the somewhat monthly ArsTechnica Starcraft 2 tournament where almost every month I try and make less and less of a fool of myself and my incredibly bad play style.&lt;/p&gt;
&lt;p&gt;You can also find live streams of the tournament on TwitchTV at:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/h2ogoldfire"&gt;H20goldfire&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv"&gt;lorcasTV&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/creamfilling1"&gt;Creamfilling1&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;Tournament bracket&lt;/h2&gt;
&lt;p&gt;&lt;a rel="lightbox" href="images/arsfeb2.jpg" title="ArsTechnica February Starcraft 2 Tournament Brackets"&gt; &lt;img width="600" height="284" alt="" src="images/arsfeb-thumb.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Tournament replays&lt;/h2&gt;
&lt;p&gt;The Starcraft 2 in-game replays can be downloaded either as a zip file from &lt;a href="http://bit.ly/arsfebsc2"&gt;here&lt;/a&gt; or individually from &lt;a href="http://drop.sc/packs/564"&gt;drop.sc&lt;/a&gt;. Please note that so far the archive isn't complete, so not all games played are there. Currently I'm missing the following matches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Winners Round 1 - oremj vs Creamfilling&lt;/li&gt;
&lt;li&gt;Winners Round 2 - MAXPOWER vs Ravebomb&lt;/li&gt;
&lt;li&gt;Winners Round 2 - dajaaj vs oremj&lt;/li&gt;
&lt;li&gt;Winners Round 3 - MooBob vs oremj&lt;/li&gt;
&lt;li&gt;Losers Round 1 - MAXPOWER vs Creamfilling&lt;/li&gt;
&lt;li&gt;Losers Round 3 - Ravebomb vs dajaaj&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;Tournament videos&lt;/h2&gt;
&lt;p&gt;Bellow is a list of commentated videos of some of the games:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309104917"&gt;Winners Bracket - lorcas vs MooBob - ZvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105241"&gt;Winners Bracket - TheMantis vs Heartless - PvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105409"&gt;Losers Bracket - lorcas vs TheMantis - ZvP - part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105682"&gt;Losers Bracket - lorcas vs TheMantis - ZvP - part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106051"&gt;Losers Bracket - lorcas vs MAXPOWER - ZvT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106525"&gt;Losers Bracket - MAXPOWER vs MooBob - TvR - part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106780"&gt;Losers Bracket - MAXPOWER vs MooBob - TvR - part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309107169"&gt;Losers Finals - dajaaj vs MooBob - PvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309107551"&gt;Grand Final - Heartless vs MooBob - RvR&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="gaming"></category><category term="ArsTechnica"></category><category term="StarCraft 2"></category><category term="tournament"></category></entry><entry><title>Consistency</title><link href="http://fuzz.me.uk/2012/02/06/consistency/" rel="alternate"></link><updated>2012-02-06T12:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-02-06:2012/02/06/consistency/</id><summary type="html">&lt;p&gt;When living in a foreign country you get accustomed to its idiosyncrasies and adapt, but it's still funny as hell to see other people struggle with the weirdness of a new place.&lt;/p&gt;
&lt;p&gt;The UK is no exception to this, and despite officially using the metric system there are still a lot of things that leave you scratching your head.&lt;/p&gt;
&lt;p&gt;So let's do a small rundown of the current &lt;abbr title="A confused or chaotic state; a mess."&gt;SNAFU&lt;/abbr&gt;:&lt;/p&gt;
&lt;h2&gt;Distance on the scale of roads&lt;/h2&gt;
&lt;p&gt;We all know road signs, right? The plates which tell us where a certain road leads to, or after what distance a certain exit will suddenly appear. Well, in the UK they use miles for distance for distances over 0.5 miles and meters under that; so one sign says junction in 1/2 miles; then were is a 300, 200 100, meter count down to the slip road.&lt;/p&gt;
&lt;h2&gt;Distance on the scale of houses and building materials&lt;/h2&gt;
&lt;p&gt;Remember the totally typical American 2x4 (2 by 4)? Well, dimensions here are officially metric, but are conveniently foot sized. E.g. sheet plaster board is "nominally 8x4", but officially 1220mmx2440mm.&lt;/p&gt;
&lt;h2&gt;Beer Draught&lt;/h2&gt;
&lt;p&gt;Small scale - multiples of 1/2 pints no exceptions that I'm aware of, the kegs are metric now. 50l I think.&lt;/p&gt;
&lt;h2&gt;Beer packaged&lt;/h2&gt;
&lt;p&gt;Mostly 330 or 500ml.&lt;/p&gt;
&lt;h2&gt;Fuel petrol, diesel, heating oil, propane/butane(LPG) for use in cars&lt;/h2&gt;
&lt;p&gt;Sold as "litres" but it's really a density corrected volume that takes into account temperature and additive mixture so isn't really litres that comes out the nozzle, but there is approximately zero general understanding of l/100km as a unit of fuel consumption miles per gallon is used officially.&lt;/p&gt;
&lt;h2&gt;Fuel propane/butane(LPG) not for use in cars&lt;/h2&gt;
&lt;p&gt;Kg, unless it's tanker delivered when it's usually litres.&lt;/p&gt;
&lt;h2&gt;Fuel Natural Gas&lt;/h2&gt;
&lt;p&gt;Therms (density corrected metric-ised cubic feet).&lt;/p&gt;
&lt;h2&gt;Tyres&lt;/h2&gt;
&lt;p&gt;mm and inches, there are too many old vehicles for genuine inches to have disappeared.&lt;/p&gt;
&lt;h2&gt;Weight (everything except people)&lt;/h2&gt;
&lt;p&gt;Pretty much Kg and Tonnes now.&lt;/p&gt;
&lt;p&gt;Except amusingly, lots of things are sold in metric amounts corresponding to their imperial equivalents eg 454g = 1 pound. They do the same thing with some (but not all) liquids sold in bottles. For instance, I get my milk delivered in glass bottles of about one pint, but I suspect that officially they are actually 574ml. If I buy milk in a supermarket in a plastic bottle it will be marked in fractional litres, corresponding to 0.5, 1, 2, 4 pints. BUT if I buy say, lemonade or other sugary carbonated type drinks, it will be in a 1.5 or 2 litre bottle.&lt;/p&gt;
&lt;h2&gt;Weight (people)&lt;/h2&gt;
&lt;p&gt;Stones and pounds.&lt;/p&gt;
&lt;h2&gt;Temperature (not the weather)&lt;/h2&gt;
&lt;p&gt;Celsius (but a significant proportion call it centigrade) and "Gas Mark" a weird unit that will not die still marked on some ovens.&lt;/p&gt;
&lt;h2&gt;Temperature (weather)&lt;/h2&gt;
&lt;p&gt;Celsius, but usually with Fahrenheit available.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;All clear? But hey, the British always have high standards :D&lt;/p&gt;</summary><category term="SI"></category><category term="metric system"></category><category term="UK"></category><category term="idiosyncrasy"></category></entry><entry><title>Patterns</title><link href="http://fuzz.me.uk/2012/01/26/patterns/" rel="alternate"></link><updated>2012-01-26T03:28:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-01-26:2012/01/26/patterns/</id><summary type="html">&lt;p&gt;&lt;img alt="No sleep &amp;amp; regrets" src="/images/sleep_late.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;From time to time I my life warps and distorts and I manage to get myself stuck in a loop: go to bed at 9am, wake up at 4pm, spend the rest of the "day" coding, listening to music and chatting with people.&lt;/p&gt;
&lt;p&gt;I guess this behavior is also enabled by the fact that nothing much happens during my new sleep hours; let's be honest here, most normal people are either at work or school during that interval, or it's too early for the US denizens to be online, so starting the day at 4pm actually makes sense, in a weird and twisted way, not to mention the fact that I love the night and the tranquility it brings. There's nothing like looking outside at the darkness, counting the few passing cars between writing lines of code. Maybe it's a bit too romanced but night seems to be the time of day when I manage to focus the best.&lt;/p&gt;
&lt;p&gt;I also find myself procrastinating a whole lot more than before, despite being more productive than I've been in ages; what's even weirder is that procrastination takes the form of reading: I've slowly started to read again, and to my huge surprise actually devoured a book in only two nights between coding sessions.&lt;/p&gt;
&lt;p&gt;This might also have something to do with the book, &lt;a href="http://www.amazon.co.uk/dp/1846059372"&gt;Ready Player One&lt;/a&gt; by Ernest Cline, a book aptly defined as nostalgia porn&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, built around a contest deeply connected to all things 80s geek, set in a virtual world, filled with danger and mistery. I actually read it as a sort of Neverending Story for the inner-geek and will most likely go through it again after watching the movies it quoted that I've, to my dire shame, missed. In any case, you can find &lt;a href="http://www.goodreads.com/review/show/264852855"&gt;my review of the book&lt;/a&gt;, and trust me, you'll love this book regardless of your views on geekdom, the 80s and fantasy stories.&lt;/p&gt;
&lt;p&gt;But I digresss, so let's get back to the unknown thing I was trying to write about.&lt;/p&gt;
&lt;p&gt;The main reason I love coding is because it's a perfect form of escapism: what better way to escape a life you're not really thrilled with, at least at this current point, than to know that you have absolute control, which is what code gives you. You are the one manipulating the world under your fingers, in a much more personal and direct way than just playing a computer game, for example; everything that happens is a direct consequence of your actions and everything is self-reliant and safe from outside influences. Put it simply, there's no one else to blame for the shit that happens except yourself.&lt;/p&gt;
&lt;p&gt;And escapism is the thing I need most dearly right now, despite not really being able to afford it. Why is that? Because every time I'm stuck in this loop things tend to start deteriorating: I get less and less sleep, neglect eating, my social interactions start to suffer (despite being online 99% of the time I'm awake), and then eventually I'll start losing my focus.&lt;/p&gt;
&lt;p&gt;Now, losing focus is a bit of a fortunate event during this time, because it means I'll start becoming more and more frustrated with my mistakes and reach a point where I'll either give up, break the pattern and return to a normal life by most standards, or I'll become even more ambitioned and plow my way through what I have to get done.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="Write drunk; edit sober - Ernest Hemmingway" src="/images/write_edit.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;If you reached this point in the article I congratulate you, and thank you for being stoic enough to put up with my drivel.&lt;/p&gt;
&lt;p&gt;For me though it's time to call it a night, or at least try to. &lt;img style="float:right; padding-right:10px" src="/images/baah.gif" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="http://www.goodreads.com/review/show/173171387"&gt;Flannery's review on Goodreads&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="sleep"></category><category term="self"></category></entry><entry><title>Playing with Python</title><link href="http://fuzz.me.uk/2012/01/22/playing-with-python/" rel="alternate"></link><updated>2012-01-22T01:37:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-01-22:2012/01/22/playing-with-python/</id><summary type="html">&lt;p&gt;I was a bit bored so I decided to make a short screencast in which I solved exercise 26 of &lt;a href="http://learnpythonthehardway.org/"&gt;Learn Python The Hard Way&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It all started because of a thread on the Good Old Games forum where MrWilli &lt;a href="http://www.gog.com/en/forum/general/what_do_i_need_to_learn_my_first_computer_language/post1"&gt;was asking about a good way to start learning programming&lt;/a&gt;, so this is goes out to him and all the nice people over at &lt;a href="http://gog.com"&gt;GOG.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It was all done in mixed environment, where the code editing and versioning was done on Windows using Sublime Text 2 and the actual Python install was under an Ubuntu VM running on top of Oracle Virtualbox, mostly because I didn't want to install Python under Windows.&lt;/p&gt;
&lt;hr /&gt;
&lt;iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/Xol9gXlsJ8U?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="python"></category><category term="video"></category><category term="coding"></category></entry><entry><title>Up, up, backup!</title><link href="http://fuzz.me.uk/2012/01/20/backups/" rel="alternate"></link><updated>2012-01-20T03:38:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-01-20:2012/01/20/backups/</id><summary type="html">&lt;p&gt;As I was saying at the end of the last post, locking myself out of the server really made me want to have implemented my backup mechanism sooner, especially considering that at this point in the life of QWERTY (my VPS) there isn't that much to back up.&lt;/p&gt;
&lt;p&gt;In short, my backup needs are simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Archive the important data:&lt;ul&gt;
&lt;li&gt;IRC bouncer logs&lt;/li&gt;
&lt;li&gt;git repositories&lt;/li&gt;
&lt;li&gt;configuration settings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upload the archive to a remote server;&lt;/li&gt;
&lt;li&gt;Repeat 1. and 2. daily.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;Archiving the data&lt;/h2&gt;
&lt;p&gt;This is a really simple bash script which creates a .tar.gz archive of the folders I specify. I could further improve the script by making it do incremental backups instead of creating a new archive each day, but considering that this is a fast and dirty version of it, and that I don't have that much stuff to back up, it'll do for now.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
date
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;############### Backing up files on the system... ###############&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;server_file_backup_&lt;span class="sb"&gt;`&lt;/span&gt;date &lt;span class="s1"&gt;&amp;#39;+%Y-%m-%d&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;----- Now tar, then zip up all files to be saved -----&amp;quot;&lt;/span&gt;
tar cvf /home/backup/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.tar /home/logs/* /home/stats/pisg.cfg /home/gugu/.znc/configs/znc.conf /home/repos/*
gzip /home/backup/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.tar
rm /home/backup/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.tar
chmod 755 /home/backup/&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;.tar.gz

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;############### Completed backing up system... ###############&amp;quot;&lt;/span&gt;
date
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The echo lines aren't really necessary, but I like having them there in case I run the script by hand for debugging purposes.&lt;/p&gt;
&lt;p&gt;What it does is create an archive named server_file_backup_$current-date and adds the folders and files specified on the line starting with &lt;em&gt;tar cvf&lt;/em&gt;. Well, better said it first creates a tar archive, then it gzips it and deletes the original .tar; this is another point where the script could be improved, but hey, it works OK right now.&lt;/p&gt;
&lt;p&gt;The archive is saved under &lt;strong&gt;/home/backup&lt;/strong&gt; and it is given all the rights except the capability for anyone to write to the file.&lt;/p&gt;
&lt;p&gt;Then all I have to do is make the script executable with:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Uploading the archive(s)&lt;/h2&gt;
&lt;p&gt;A backup wouldn't really be a backup if it lives on the same system you're doing it on, now would it? Now, there are a couple of ways to move the data out, but I decided to simply FTP it out to the webserver which hosts my main blog.&lt;/p&gt;
&lt;p&gt;I initially tried the script using the built-in ftp utility but didn't manage to get it to work, so I looked around and settled for ncftp; debugging the problem would've been more interesting and a better learning experience but I wanted to get the backups up and running as soon as possible, so this will be a future exercise on my part.&lt;/p&gt;
&lt;p&gt;The script is a simple one which logs in to the remote server using a provided username and password and uploads all archives to a pre-specified directory.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ftp_user_name&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ftp_password&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ftp_server&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# local directory to pick up *.tar.gz file&lt;/span&gt;
&lt;span class="nv"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/backup&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# remote directory to upload backup&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/back&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# upload file&lt;/span&gt;
ncftp -u&lt;span class="s2"&gt;&amp;quot;$USERNAME&amp;quot;&lt;/span&gt; -p&lt;span class="s2"&gt;&amp;quot;$PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$SERVER&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;cd $BACKUPDIR&lt;/span&gt;
&lt;span class="s"&gt;mput $FILE/*.tar.gz&lt;/span&gt;
&lt;span class="s"&gt;quit&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And after running the same &lt;strong&gt;chmod +x&lt;/strong&gt; on up.sh, ensuring it's executable, I've got a nice setup to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the backup archive;&lt;/li&gt;
&lt;li&gt;Upload it to the remote server.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;The magic of cron&lt;/h2&gt;
&lt;p&gt;Now all I have to do is make sure that the scripts run daily so that in case of something bad happening I don't have a lot of data missing. Of course, nothing really stops me running the scripts more often than that, but it's a nice trade-off between the size of the files and how much new data there is added.&lt;/p&gt;
&lt;p&gt;Linux has something very similar to the Windows Task Scheduler called cron; what it does is allows users to schedule jobs (commands or shell scripts) to run periodically at certain times or dates.&lt;/p&gt;
&lt;p&gt;In order for my scripts to run periodically I had to add them to the &lt;strong&gt;crontab&lt;/strong&gt; file, the configuration file for cron which tells it when the jobs need to be executed. To get to the list all I had to do was run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;crontab&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I just needed to add the jobs. I wanted to run the archiving script every night at 1am, and then at 1:30am the upload script. Why the 30 minute gap between the jobs? I want to have a margin of error in case I'll add to the script which makes the archive, or in case files get really large, so that I won't have the upload script try and run while the archive is being created.&lt;/p&gt;
&lt;p&gt;Anyway, the code for the jobs is:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;*&lt;/span&gt; 1 &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
30 1 &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line tells cron that it has to run archive.sh every day at 1am and up.sh at 1:30am.&lt;/p&gt;
&lt;p&gt;And with this I have a backup system in place.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;To do&lt;/h2&gt;
&lt;p&gt;I know that things can be improved, and in no way do I say that this is perfect, but it suits my needs at this point in time.&lt;/p&gt;
&lt;p&gt;What can (and will be) improved upon are the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Making incremental backups&lt;/strong&gt; - This would mean that I'd set a specific day of the week to be the the full backup day,
                                     when everything gets archived, and then on every other day only the files that changed
                                     get updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use built-in ftp client&lt;/strong&gt;  - Go back and check to see the reason why I couldn't get ftp to work properly so that I
                                     had to use ncftp instead.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I guess that's about it. In all honesty, if I had ssh access to another server I'd just use rsync for the backups, but seeing that I don't, this is the best method that came to mind.&lt;/p&gt;
&lt;p&gt;In the next post I'll most likely talk about git and how I've integrated it with Pelican.&lt;/p&gt;</summary><category term="backup"></category><category term="ftp"></category><category term="archive"></category></entry><entry><title>Lockout: no pass, no key</title><link href="http://fuzz.me.uk/2012/01/19/locked-out/" rel="alternate"></link><updated>2012-01-19T23:52:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-01-19:2012/01/19/locked-out/</id><summary type="html">&lt;h2&gt;A foreword&lt;/h2&gt;
&lt;p&gt;As you may not know, I'm mostly a Microsoft tech junkie venturing into the wonderful world of Linux. I've visited this land from time to time, but never had the time or motivation to try and settle in, but all this is about to change as one of my New Years resolutions was to get my hands dirty in Linux.&lt;/p&gt;
&lt;p&gt;Every new beginning is a learning experience, and what better way to learn than from the mistakes made (and the process of trying to fix them)? With this, I bring you my first - and probably not last - embarrassing story.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The idea&lt;/h2&gt;
&lt;p&gt;The goal was noble: &lt;em&gt;try and make my VPS as secure as possible&lt;/em&gt;. And what better way to achieve this than to disable ssh password authentication, only allowing users to connect with public key authentication?&lt;/p&gt;
&lt;p&gt;In the end, it was simple! All I had to do was modify &lt;strong&gt;/etc/ssh/sshd_config&lt;/strong&gt; and add&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;PasswordAuthentication no
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a restart of the ssh server all was good in the world.&lt;/p&gt;
&lt;p&gt;Heck, I was so happy that I managed to get everything running that I even made an excited tweet that would prove to be a bit too prescient for my taste.&lt;/p&gt;
&lt;p align="center"&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p&gt;Finally managed to get git to behave. I feel so victorious I'd reinstall the server just to do it again. Which reminds me, need backups.&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a href="https://twitter.com/fuzzmz/status/159357579846365185" data-datetime="2012-01-17T19:33:00+00:00"&gt;January17, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;hr /&gt;
&lt;h2&gt;The catalyst&lt;/h2&gt;
&lt;p&gt;Every time I logged in, the working directory was &lt;strong&gt;/root&lt;/strong&gt; (and yes, I know that I shouldn't use root for my day to day business, but hey, that's why I disabled password authentication) and yet all of my work was done in &lt;strong&gt;/home&lt;/strong&gt;. This in turn lead to a very frustrated Fuzz who sought to fix his problem.&lt;/p&gt;
&lt;p&gt;I mean, it couldn't be that hard to change the login directory, would it? Heck, Linux even gives you a simple way to do it through&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;usermod -d newdir loginname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So all I had to do was to run &lt;em&gt;usermod -d /home root&lt;/em&gt; and I'd be set. Little did I know that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there is an additional parameter, &lt;em&gt;-m&lt;/em&gt; which moves the contents of the old dir to the new one (*cough* *cough*);&lt;/li&gt;
&lt;li&gt;you can't run the command for the user you're currently logged in with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This meant that I had to search for an alternative: it was changing the directory directly in the &lt;strong&gt;/etc/passwd&lt;/strong&gt; file, and so I did.&lt;/p&gt;
&lt;p&gt;And things were good!&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;There are no keys to this castle&lt;/h2&gt;
&lt;p&gt;A short time passes after changing the passwd file and I decide to do a logout and log back in.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Permission&lt;/span&gt; &lt;span class="n"&gt;denied&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;publickey&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OK, this isn't good, this isn't good at all!&lt;/p&gt;
&lt;p&gt;Remember that -m I told you about? Yeah, the one that moves the contents of the old login directory to the new one; well, one of the things it moves is the &lt;strong&gt;.ssh&lt;/strong&gt; folder which contains the authorized_keys file.&lt;/p&gt;
&lt;p&gt;What's so special about that file? Well, it holds the list of rsa keys which are allowed to access the server. Think of them as the keys that open your house door in the absence of people inside (the password, which I disabled) to open the door for you.&lt;/p&gt;
&lt;p&gt;In short:&lt;/p&gt;
&lt;p align="center"&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p&gt;Just as I got everything running the way I wanted I managed to lock myself out of the server. Fucking piece of shit!&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a href="https://twitter.com/fuzzmz/status/159371687379484675" data-datetime="2012-01-17T20:29:00+00:00"&gt;January17, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Fortunately, while bitching on Twitter about the whole situation &lt;a href="http://twitter.com/Kephu"&gt;Keph&lt;/a&gt; reminds me that I still have access to the server... somewhat.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;IRC bouncer to the rescue!&lt;/h2&gt;
&lt;p&gt;One of the purposes of that VPS is to run &lt;a href="http://wiki.znc.in"&gt;ZNC&lt;/a&gt;, an IRC bouncer which has some nice capabilities, one of them being a module called &lt;em&gt;shell&lt;/em&gt; which allow you to type commands into a query as if it were a terminal.&lt;/p&gt;
&lt;p&gt;"Yay, I am saved!" thought I, without realizing that I had ZNC run under a non-admin account, exactly because of the shell module. The reasoning is that in case someone hacks my IRC password they won't be able to do any damage as, either by loging in the server directly through ssh or via the shell module.&lt;/p&gt;
&lt;p&gt;On the upside, even though I couldn't do much I could at least write an authorized_keys file for that user and get ssh access to the server; this in turn meant that I could back up a portion of my data in case I had to reinstall the server.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Admin panel? What admin panel?&lt;/h2&gt;
&lt;p&gt;Of course, people both in IRC and on Twitter told me to see if I can get access to the server via the admin panel provided by the VPS host. Fortunately for me, they did indeed provide such access via a serial console.&lt;/p&gt;
&lt;p&gt;&lt;img style="float:left; padding-right:10px" src="/images/magic-button.PNG" /&gt;&lt;/p&gt;
&lt;p&gt;I had seen this magic button and tried it even before embarking on the amazing IRC-hackathon journey, I, in my eternal wisdom, decided to replace the default username in the dialogue that popped up when I pressed it with root, which in turn led me to the same "Permission denied(publickey)" error message.&lt;/p&gt;
&lt;p&gt;This time though, this time it would be different! This time I would leave the default username and gaze upon the wonders of&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;root@qwerty:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yes, I was in and victorious!&lt;/p&gt;
&lt;p&gt;I quickly created a .ssh/authorized_keys file under my new login directory and started working on my backup strategy.&lt;/p&gt;
&lt;p&gt;But about that, in the next blog update.&lt;/p&gt;</summary><category term="Linux"></category><category term="d'oh"></category></entry><entry><title>Hello world!</title><link href="http://fuzz.me.uk/2012/01/18/hello-world/" rel="alternate"></link><updated>2012-01-18T00:02:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-01-18:2012/01/18/hello-world/</id><summary type="html">&lt;p&gt;This is my attempt at getting the &lt;a class="reference external" href="http://pelican.readthedocs.org/en/2.7.2/index.html"&gt;Pelican&lt;/a&gt; blog system installed on my new VPS.&lt;/p&gt;
&lt;p&gt;This is also a first &lt;strong&gt;Hello World&lt;/strong&gt; blog post, as is customary. So, hello! I'm not sure yet what this blog is going to be about, most likely about my adventures in learning more about the wonderful word of Linux server administration and geekiness.&lt;/p&gt;
&lt;p&gt;It's also a bit weird to write this as I haven't learned much about the reStructredText format, which is used behind the scenes to write the posts.&lt;/p&gt;
&lt;p&gt;In any case, hope you'll have fun reading this as I have writing it.&lt;/p&gt;
</summary><category term="Pelican"></category><category term="blog"></category></entry></feed>