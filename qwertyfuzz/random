<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>QWERTY - fast keystrokes</title><link href="http://fuzz.me.uk/" rel="alternate"></link><link href="http://feeds.feedburner.com/qwertyfuzz/random" rel="self"></link><id>http://fuzz.me.uk/</id><updated>2012-11-26T00:00:00+02:00</updated><entry><title>View article source</title><link href="http://fuzz.me.uk/2012/11/26/view-source/" rel="alternate"></link><updated>2012-11-26T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-11-26:2012/11/26/view-source/</id><summary type="html">&lt;p&gt;You can now view the article markdown source by clicking on the &lt;strong&gt;view: article source&lt;/strong&gt; in the article info pane, just beneath the associated tags list.&lt;/p&gt;
&lt;p&gt;If you're curious about the changes made in the backend for this to function you can always take a look at the &lt;em&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/1"&gt;Add 'View Article Source' link&lt;/a&gt;&lt;/em&gt; issue on GitHub.&lt;/p&gt;</summary><category term="Pelican"></category><category term="GitHub"></category><category term="Markdown"></category></entry><entry><title>How it's made</title><link href="http://fuzz.me.uk/2012/11/22/this-blog/" rel="alternate"></link><updated>2012-11-22T00:00:00+02:00</updated><author><name>Serban Constantin</name></author><id>tag:fuzz.me.uk,2012-11-22:2012/11/22/this-blog/</id><summary type="html">&lt;p&gt;I kept wanting to write an article about the tech behind this blog for a while, and I even addressed it a bit in the &lt;a href="http://fuzz.me.uk/2012/02/21/github-hosting/"&gt;GitHub Pages - free website hosting&lt;/a&gt; article, but now it's time to do a proper write-up of what's going on behind the scenes of this blog.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The software&lt;/h2&gt;
&lt;p&gt;As you can see in the footer, this blog is built using &lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;, a blogging engine written in Python. The gist of it is that it takes an article written in Markdown or reStructuredText, runs its magic on it and in the end outputs a properly formated and themed html file.&lt;/p&gt;
&lt;p&gt;This whole process has the advantage of allowing you to focus on the writing and ignoring all the distractions found in more full-fledged CMS systems such as Wordpress, where I used to spend more time tweaking settings and plugins than I did writing.&lt;/p&gt;
&lt;p&gt;One disadvantage though is that it can be a bit harder to learn how to use at first compared to a WYSIWYG interface, but after you get your config up and running and get a hang of the Markdown syntax (which I recommend over RST) things will be extremely fast.&lt;/p&gt;
&lt;p&gt;Speaking of Markdown, you'll also need a text editor. While you can do this in Notepad or any other simple text editor, I'm partial of &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text 2&lt;/a&gt;. The reason why I chose it is because it not only offers syntax coloring but also advanced editing functions such as multi-row edits, the ability to show diffs and also plugins. Through these plugins you can integrate it with git so that you can basically never leave your editor from starting writing the article and up to the point it goes live on your website.&lt;/p&gt;
&lt;p&gt;The last part of the trifecta is &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt;, a source code management system that ties in nicely with &lt;a href="http://github.com/"&gt;GitHub&lt;/a&gt;, the place where the website is actually stored.&lt;/p&gt;
&lt;p&gt;I honestly recommend using git (or any sort of SCM) even if you're not working with code. Text can be versioned so that you can always go back to a previous version and have a history of edits for example. As a programmer it's just common sense to have a SCM of choice and all code versioned.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;The flow&lt;/h2&gt;
&lt;p&gt;Now it's time to tell you how all of these pieces of technology come together to create the website you're browsing right now.&lt;/p&gt;
&lt;p&gt;The flow can be broken down in 4 big parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Writing the article;&lt;/li&gt;
&lt;li&gt;Committing &amp;amp; pushing the post;&lt;/li&gt;
&lt;li&gt;Pelican magic;&lt;/li&gt;
&lt;li&gt;Publishing the output.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These 4 steps take place on a total of 3 systems, my own PC, my VPS and the GitHub servers. Step 1 is the only one which is self-reliant, not being dependent on any other of the machines.&lt;/p&gt;
&lt;p&gt;Once I finish writing the article I then commit the changes and push them to a remote repository that resides on my VPS. &lt;/p&gt;</summary><category term="git"></category><category term="GitHub"></category><category term="Pelican"></category></entry></feed>